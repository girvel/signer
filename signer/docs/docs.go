// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/public": {
            "get": {
                "description": "Get the public key used for signature verification in PEM format",
                "produces": [
                    "text/plain"
                ],
                "summary": "Get the public key",
                "responses": {
                    "200": {
                        "description": "The key",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sign": {
            "post": {
                "description": "Get an RSA PSS signature for given text",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "Sign the given text",
                "parameters": [
                    {
                        "description": "Text to sign",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the dated text with a signature",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Can't read body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "415": {
                        "description": "Content-Type is not text/plain",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Issues with cryptography algorithm",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/verify": {
            "post": {
                "description": "Verify given signed text; quality of life feature, can be done locally with the public key.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "Verify text + signature",
                "parameters": [
                    {
                        "description": "Signed text to verify; ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Signature matches",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Can't read body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Signature doesn't match",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "415": {
                        "description": "Content-Type is not text/plain",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
